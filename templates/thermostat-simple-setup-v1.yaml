apiVersion: "v1"
kind: "Template"
metadata:
  name: "thermostat-simple-setup"
objects:
###################
## BUILD CONFIGS ##
###################
##### GATEWAY #####
# gateway builder image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "thermostat-gateway-builder-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
      - type: "ConfigChange"
      - type: "ImageChange"
        imageChange: {}
    source:
      type: "Git"
      git:
        uri: "https://github.com/zzambers/openshift-stuff.git"
      contextDir: "builder-images/thermostat-web-gateway-builder"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-openjdk18-openshift:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway-builder:latest"
    runPolicy: "Serial"
# gateway artifacts image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "thermostat-gateway-artifacts-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
      - type: "ConfigChange"
      - type: "ImageChange"
        imageChange: {}
    source:
      type: "Git"
      git:
        uri: "https://github.com/zzambers/thermostat-ng_web-gateway.git"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway-builder:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway-artifacts:latest"
    runPolicy: "Serial"
# gateway image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-gateway-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
      - type: "ConfigChange"
      - imageChange: {}
        type: "ImageChange"
    source:
      type: "Dockerfile"
      dockerfile: |
        FROM thermostat-openjdk18-openshift:latest
        USER root
        COPY deployments/* /deployments/
        RUN bash /deployments/helper-scripts/runtime-image-prepare.sh
        EXPOSE 30000
        USER 1001
      images:
      - from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway-artifacts:latest"
        paths:
        - destinationDir: "./deployments"
          sourcePath: "/deployments"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-openjdk18-openshift:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway:latest"
    runPolicy: "Serial"
##### CLIENT #####
# client artifacts image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-client-artifacts-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChange: {}
    source:
      type: "Git"
      git:
        uri: "https://github.com/zzambers/thermostat-ng_web-client.git"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-nodejs-6-centos7:latest"
        env:
        - name: "GATEWAY_URL"
          value: "${GATEWAY_URL}"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-client-artifacts:latest"
    runPolicy: "Serial"
# gateway + client image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-gateway-client-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
      - type: "ConfigChange"
      - type: "ImageChange"
        imageChange: {}
    source:
      type: "Dockerfile"
      dockerfile: |
        FROM thermostat-gateway-image:latest
        USER root
        COPY dist/* /deployments/web-client/
        USER 1001
      images:
      - from:
          kind: "ImageStreamTag"
          name: "thermostat-client-artifacts:latest"
        paths:
        - destinationDir: "./dist"
          sourcePath: "/opt/app-root/src/dist"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway-client:latest"
    runPolicy: "Serial"
##### AGENT #####
# openjdk-8 base image for agent bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-openjdk-8-64bit-maven-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/jerboaa/openjdk-8-maven-docker.git"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-s2i-base-centos7:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-openjdk-8-64bit-maven:latest"
    runPolicy: "Serial"
# agent builder bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-agent-builder-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/thermostat-project/thermostat-agent-container.git"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-openjdk-8-64bit-maven:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-agent-builder:latest"
    runPolicy: "Serial"
# agent bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-agent-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/zzambers/thermostat-ng_agent.git"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-agent-builder:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-agent:latest"
    runPolicy: "Serial"
##### WILDFLY-TESTAPP #####
# wildfly testapp builder bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-wildfly-testapp-builder-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/zzambers/openshift-stuff.git"
      contextDir: "builder-images/wildfly-thermostat-ng-agent-builder"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-agent:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-wildfly-testapp-builder:latest"
    runPolicy: "Serial"
# wildfly testapp
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-wildfly-testapp-bc"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/thermostat-project/thermostat-agent-container.git"
      contextDir: "test/wildfly-testapp"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-wildfly-testapp-builder:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-wildfly-testapp:latest"
    runPolicy: "Serial"
###################
## IMAGE STREAMS ##
###################
#### MONGO #####
# mongodb image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-mongodb-32-rhel7"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    dockerImageRepository: "registry.access.redhat.com/rhscl/mongodb-32-rhel7"
##### GATEWAY #####
# base image for gateway
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-openjdk18-openshift"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    dockerImageRepository: "registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift"
# gateway builder image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway-builder"
    labels:
      app-group: "thermostat-simple-setup"
# gateway artifacts image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway-artifacts"
    labels:
      app-group: "thermostat-simple-setup"
# gateway runtime image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway"
    labels:
      app-group: "thermostat-simple-setup"
##### CLIENT #####
# base image for client (artifacts image)
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-nodejs-6-centos7"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    dockerImageRepository: "centos/nodejs-6-centos7"
# client artifacts image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-client-artifacts"
    labels:
      app-group: "thermostat-simple-setup"
# gateway + client image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway-client"
    labels:
      app-group: "thermostat-simple-setup"
##### AGENT #####
# base image for openjdk-8 base image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-s2i-base-centos7"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    dockerImageRepository: "centos/s2i-base-centos7"
# openjdk-8 base image for agent
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-openjdk-8-64bit-maven"
    labels:
      app-group: "thermostat-simple-setup"
# agent builder image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-agent-builder"
    labels:
      app-group: "thermostat-simple-setup"
# agent image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-agent"
    labels:
      app-group: "thermostat-simple-setup"
##### WILDFLY-TESTAPP #####
# wildfly testapp builder image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-wildfly-testapp-builder"
    labels:
      app-group: "thermostat-simple-setup"
# wildfly testapp image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-wildfly-testapp"
    labels:
      app-group: "thermostat-simple-setup"
########################
## DEPLOYMENT CONFIGS ##
########################
# mongodb dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-mongodb-dc"
    labels:
      app: "thermostat-mongodb-app"
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-mongodb-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-mongodb-32-rhel7:latest"
    template:
      metadata:
        labels:
          app: "thermostat-mongodb-app"
          app-group: "thermostat-simple-setup"
      spec:
        containers:
        - name: "thermostat-mongodb-container"
          image: "thermostat-mongodb-32-rhel7:latest"
          imagePullPolicy: "Always"
          env:
          - name: "MONGODB_ADMIN_PASSWORD"
            value: "arst"
          - name: "MONGODB_DATABASE"
            value: "thermostat"
          - name: "MONGODB_PASSWORD"
            value: "mongo"
          - name: "MONGODB_USER"
            value: "mongo"
    selector:
      app: "thermostat-mongodb-app"
    replicas: 1
    strategy:
      type: "Recreate"
# gateway + client dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-gateway-client-dc"
    labels:
      app: "thermostat-gateway-client-app"
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-gateway-client-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway-client:latest"
    template:
      metadata:
        labels:
          app: "thermostat-gateway-client-app"
          app-group: "thermostat-simple-setup"
      spec:
        containers:
        - name: "thermostat-gateway-client-container"
          image: "thermostat-gateway-client:latest"
          imagePullPolicy: "Always"
          env:
          - name: "MONGO_DB"
            value: "thermostat"
          - name: "MONGO_PASSWORD"
            value: "mongo"
          - name: "MONGO_URL"
            value: "mongodb://thermostat-mongodb-svc:27017"
          - name: "MONGO_USERNAME"
            value: "mongo"
    selector:
      app: "thermostat-gateway-client-app"
    replicas: 1
    strategy:
      type: "Recreate"
# agent + wildfly-testapp dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-wildfly-testapp-dc"
    labels:
      app: "thermostat-wildfly-testapp-app"
      app-group: "thermostat-simple-setup"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-wildfly-testapp-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-wildfly-testapp:latest"
    template:
      metadata:
        labels:
          app-group: "thermostat-simple-setup"
          app: "thermostat-wildfly-testapp-app"
      spec:
        containers:
        - name: "thermostat-wildfly-testapp-container"
          image: "thermostat-wildfly-testapp:latest"
          imagePullPolicy: "Always"
          env:
          - name: "THERMOSTAT_AGENT_PASSWORD"
            value: "agent-pwd"
          - name: "THERMOSTAT_AGENT_USERNAME"
            value: "foo-agent-user"
          - name: "THERMOSTAT_COMMANDS_URL"
            value: "wss://thermostat-gateway-client-svc:30000/commands/v1"
          - name: "THERMOSTAT_HOST_CPU_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-cpu/0.0.1"
          - name: "THERMOSTAT_HOST_MEMORY_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-memory/0.0.1"
          - name: "THERMOSTAT_HOST_NETWORK_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-network/0.0.1"
          - name: "THERMOSTAT_HOST_OVERVIEW_URL"
            value: "https://thermostat-gateway-client-svc:30000/systems/0.0.1"
          - name: "THERMOSTAT_JVM_OVERVIEW_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvms/0.0.1/"
          - name: "THERMOSTAT_VM_GC_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvm-gc/0.0.2"
          - name: "THERMOSTAT_VM_MEMORY_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvm-memory/0.0.2"
    selector:
      app: "thermostat-wildfly-testapp-app"
    replicas: 1
    strategy:
      type: "Recreate"
##############
## SERVICES ##
##############
# mongo service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-mongodb-svc"
    labels:
      app: "thermostat-mongodb-app"
      app-group: "thermostat-simple-setup"
  spec:
    selector:
      app: "thermostat-mongodb-app"
    ports:
    - name: 27017-tcp
      protocol: TCP
      port: 27017
      targetPort: 27017
# gateway + client service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-gateway-client-svc"
    labels:
      app: "thermostat-gateway-client-app"
      app-group: "thermostat-simple-setup"
  spec:
    selector:
      app: "thermostat-gateway-client-app"
    ports:
    - name: 30000-tcp
      protocol: TCP
      port: 30000
      targetPort: 30000
# wildfly-testapp service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-wildfly-testapp-svc"
    labels:
      app: "thermostat-wildfly-testapp-app"
      app-group: "thermostat-simple-setup"
  spec:
    selector:
      app: "thermostat-wildfly-testapp-app"
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
############
## ROUTES ##
############
# gateway + client route
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "thermostat-gateway-client-route"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    to:
      kind: "Service"
      name: "thermostat-gateway-client-svc"
    port:
      targetPort: "30000-tcp"
    tls:
      termination: "passthrough"
# agent + wildfly-testapp route
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "thermostat-wildfly-testapp-route"
    labels:
      app-group: "thermostat-simple-setup"
  spec:
    to:
      kind: "Service"
      name: "thermostat-wildfly-testapp-svc"
    port:
      targetPort: "8080-tcp"
################
## PARAMETERS ##
################
parameters:
# URL on which thermostat gateway resides as seen from client (browser),
# used in web-client's buildconfig (see thermostat-client-artifacts-bc higher)
# for example:
# https://thermostat-gateway-client-route-thermostat-test.192.168.1.16.xip.io
- name: "GATEWAY_URL"
  description: "URL of thermostat gateway (used for client build config)"
  required: true
